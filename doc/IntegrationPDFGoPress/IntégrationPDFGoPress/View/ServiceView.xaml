<UserControl x:Class="IntégrationPDFGoPress.View.ServiceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
              d:DesignHeight="900" d:DesignWidth="1000"
             Background="White"
             DataContext="{Binding ServiceVM,Source={StaticResource Locator}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
        <Border  BorderBrush="#E0E0E0" BorderThickness=" 0 0 0 1"  >
            <StackPanel
       Margin="20,1.8,0,1.7"
      HorizontalAlignment="Left"
      Orientation="Horizontal">
               <Button
                Height="25" Width="25"
        Margin="10,0,0,0"
        Padding="10,5"
        VerticalAlignment="Center"
        Background="#2490BE"
        Command="{Binding SaveParameter}"
        Cursor="Hand"
        ToolTip="Enregistrer">
                    <materialDesign:PackIcon
          Margin="-10 -5 -8 -2"
          Width="22"
          Height="22"
          Foreground="White"
          Kind="ContentSave" />
                </Button>
            </StackPanel>
        </Border>
        
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Répertoire d'entrée : "  Margin="20 0 0 10" VerticalAlignment="Bottom"/>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center">
                <TextBox   Height="25" Width="590"   Margin="20 0 0 10"
                           Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Background="Transparent" Cursor="Hand" BorderThickness="0" Padding="0" Width="30" Height="30" Margin="0" Command="{Binding InputFolder}" VerticalAlignment="Bottom">
                    <materialDesign:PackIcon Kind="Folder" Foreground="#2490BE" Width="20" Height="20" />
                </Button>
            </StackPanel>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Répertoire de sortie : "  Margin="20 0 0 10" VerticalAlignment="Bottom"/>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"  VerticalAlignment="Center">
                <TextBox    Height="25" Width="590"   Margin="20 0 0 10" 
                            Text="{Binding Output, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            IsReadOnly="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <Button Background="Transparent" Cursor="Hand" BorderThickness="0" Padding="0" Width="30" Height="30" Margin="0" Command="{Binding OutputFolder}" VerticalAlignment="Bottom">
                    <materialDesign:PackIcon Kind="Folder" Foreground="#2490BE" Width="20" Height="20" />
                </Button>
            </StackPanel>

            <!--<TextBlock Grid.Row="4" Grid.Column="0" Text="Répertoire de sortie : "  Margin="20 0 0 10" VerticalAlignment="Bottom"/>
            <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"  VerticalAlignment="Center">
                <TextBox    Height="25" Width="590"   Margin="20 0 0 10" Text="{Binding OutputDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Background="Transparent" Cursor="Hand" BorderThickness="0" Padding="0" Width="30" Height="30" Margin="0" Command="{Binding OutputFolder}" VerticalAlignment="Bottom">
                    <materialDesign:PackIcon Kind="Folder" Foreground="#2490BE" Width="20" Height="20" />
                </Button>
            </StackPanel>-->


            <TextBlock Text="Heure de lancement : " Margin="20 0 0 10" Grid.Row="2" Grid.Column="0" VerticalAlignment="Bottom"/>
            <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="20 0 0 10">
                <ComboBox Height="24" Width="35"  Padding="0 1 0 1" 
                          ItemsSource="{Binding ValueHours,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding HourServiceStart,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock Text=":"  VerticalAlignment="Center" Margin=" 10 0 10 0" />
                <ComboBox Height="24" Width="35" Padding="0 1 0 1" 
                          ItemsSource="{Binding ValueMinutesSecond,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding MinuteServiceStart,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="10">
                <TextBlock Text="Heure de fin : " Margin="10 0" VerticalAlignment="Bottom"/>
                <ComboBox Height="24" Width="35" Padding="0 1 0 1"
                          ItemsSource="{Binding ValueHours,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding HourServiceStop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock Text=":"  VerticalAlignment="Center" Margin=" 10 0 10 0"/>
                <ComboBox Height="24" Width="35" Padding="0 1 0 1" 
                          ItemsSource="{Binding ValueMinutesSecond,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding MinuteServiceStop,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Temps de relance : " Margin="20 0 0 10" VerticalAlignment="Bottom"/>
            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="20 0 0 10" >
                <TextBox Height="24" Width="45" MaxLength="5"  VerticalAlignment="Bottom" 
                         Text="{Binding MinutePerod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PreviewTextInput="InputControl">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <TextBlock Text="minutes"  Margin="10 0" Foreground="#0e5273" VerticalAlignment="Bottom"/>
            </StackPanel>

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Effacement des records : "  Margin="20 0 0 10" VerticalAlignment="Bottom"/>
            <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="20 0 0 10" >
                <TextBox Height="24" Width="45" MaxLength="5"  VerticalAlignment="Center" 
                         Text="{Binding DeletingDayRecord, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         PreviewTextInput="InputControl">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding IsModifiedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox> 
                <TextBlock Text="jours"  Margin="10 0" Foreground="#0e5273" VerticalAlignment="Center"/>
            </StackPanel>

           

            

        </Grid>
    </Grid>
</UserControl>
