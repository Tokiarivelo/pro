//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SourcesDB.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SourcesDBEntities : DbContext
    {
        public SourcesDBEntities()
            : base("name=SourcesDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Media> Media { get; set; }
        public virtual DbSet<MediaMasterChild> MediaMasterChild { get; set; }
    
        public virtual int sp_CopyOneFigure(Nullable<long> srcMediaID)
        {
            var srcMediaIDParameter = srcMediaID.HasValue ?
                new ObjectParameter("SrcMediaID", srcMediaID) :
                new ObjectParameter("SrcMediaID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CopyOneFigure", srcMediaIDParameter);
        }
    
        public virtual int sp_RefreshMediaToMS(Nullable<long> mediaID, string modBy)
        {
            var mediaIDParameter = mediaID.HasValue ?
                new ObjectParameter("MediaID", mediaID) :
                new ObjectParameter("MediaID", typeof(long));
    
            var modByParameter = modBy != null ?
                new ObjectParameter("ModBy", modBy) :
                new ObjectParameter("ModBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RefreshMediaToMS", mediaIDParameter, modByParameter);
        }
    }
}
